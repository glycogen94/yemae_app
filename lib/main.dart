import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_auth/firebase_auth.dart';
// Import Firestore for potential future use here, though not directly used in this basic auth wrapper
// import 'package:cloud_firestore/cloud_firestore.dart'; 
import 'firebase_options.dart'; // Generated by flutterfire configure
import 'screens/home_screen.dart';
import 'screens/login_screen.dart'; // We need to create this

void main() async { // Make main async
  WidgetsFlutterBinding.ensureInitialized(); // Ensure Flutter bindings are initialized
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  ); // Initialize Firebase
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Yemae App', // Updated App Title
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.blue), // Changed theme color
        useMaterial3: true,
      ),
      home: const AuthWrapper(), // Use AuthWrapper to handle auth state
    );
  }
}

// A Widget that rebuilds when the authentication state changes
class AuthWrapper extends StatelessWidget {
  const AuthWrapper({super.key});

  @override
  Widget build(BuildContext context) {
    return StreamBuilder<User?>(
      stream: FirebaseAuth.instance.authStateChanges(),
      builder: (context, snapshot) {
        // Show loading indicator while checking auth state
        if (snapshot.connectionState == ConnectionState.waiting) {
          return const Scaffold(
            body: Center(child: CircularProgressIndicator()),
          );
        }

        // If user is logged in, show HomeScreen
        if (snapshot.hasData) {
          return const HomeScreen();
        }

        // If user is not logged in, show LoginScreen
        return const LoginScreen(); // We need to create this screen
      },
    );
  }
}


// Removing MyHomePage and _MyHomePageState as they are replaced by HomeScreen and LoginScreen logic
